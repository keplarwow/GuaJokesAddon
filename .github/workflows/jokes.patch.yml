name: Auto Bump Patch Version

on:
  workflow_dispatch: {} # manual trigger
  push:
    paths:
      - 'jokes.lua' # trigger when jokes.lua is changed
    branches:
      - main

jobs:
  bump-patch:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # important to fetch all tags!

    - name: Get latest tag
      id: get_tag
      run: |
        latest_tag=$(git describe --tags $(git rev-list --tags --max-count=1) 2>/dev/null || echo "v0.0.0")
        echo "Latest tag: $latest_tag"
        echo "latest_tag=$latest_tag" >> $GITHUB_ENV

    - name: Bump patch version
      id: bump
      run: |
        version="${{ env.latest_tag }}"
        version="${version#v}" # remove leading v
        IFS='.' read -r major minor patch <<< "$version"
        patch=$((patch + 1))
        new_version="v$major.$minor.$patch"
        echo "New version: $new_version"
        echo "new_version=$new_version" >> $GITHUB_ENV

    - name: Create or recreate annotated git tag
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"

        # Check if tag exists locally
        if git rev-parse "${{ env.new_version }}" >/dev/null 2>&1; then
          echo "Tag ${{ env.new_version }} exists locally, deleting it"
          git tag -d "${{ env.new_version }}"
        fi

        # Check if tag exists remotely
        if git ls-remote --tags origin | grep -q "refs/tags/${{ env.new_version }}$"; then
          echo "Tag ${{ env.new_version }} exists remotely, deleting it"
          git push --delete origin "refs/tags/${{ env.new_version }}"
        fi

        # Create new annotated tag
        git tag -a "${{ env.new_version }}" -m "Release ${{ env.new_version }}"
        git push origin "refs/tags/${{ env.new_version }}"

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ env.new_version }}
        name: ${{ env.new_version }}
        body: "Automatic patch bump to ${{ env.new_version }}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
